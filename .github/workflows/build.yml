name: Build
on:
  pull_request:
    branches: [main, dev]
    workflow_dispatch:

jobs:
    build-linux-with-docker:
        name: Linux(With Dockerfile)
        runs-on: ubuntu-latest
        timeout-minutes: 15
        env:
          # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
          BUILD_TYPE: Release
        steps:
            - uses: actions/checkout@v4
           
            # 构建 Docker 镜像
            - name: Build Docker image
              run: docker build -t gpupixel_img .
 
            - name: Build 
              run: docker run --rm -v $(pwd)/output:/workspace/output -v $(pwd)/build:/workspace/build gpupixel_img

    build-macos-clang:
        name: macOS (Universal)
        runs-on: macos-latest
        timeout-minutes: 15
        env:
            BUILD_TYPE: Release
            CMAKE_OSX_ARCHITECTURES: x86_64;arm64
        steps:
            - uses: actions/checkout@v4

            - name: Configure
              run: cmake -G Xcode -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/toolchain/ios.toolchain.cmake -DPLATFORM=MAC_UNIVERSAL -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -S ${{ github.workspace }}/src
            - name: Build
              run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    
    build-ios-clang:
        name: iOS (Arm64)
        runs-on: macos-latest
        timeout-minutes: 15
        env:
            BUILD_TYPE: Release
            CMAKE_OSX_ARCHITECTURES: x86_64;arm64
        steps:
            - uses: actions/checkout@v4

            - name: Configure
              run: cmake -G Xcode -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/toolchain/ios.toolchain.cmake -DPLATFORM=OS64 -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -S ${{ github.workspace }}/src
            - name: Build
              run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
              
    build-windows-cl:
        name: Windows (MSCV CL.EXE)
        runs-on: windows-latest
        timeout-minutes: 15
        env:
            BUILD_TYPE: Release
        steps:
            - uses: actions/checkout@v4

           # Step 2: 配置 MSVC 环境为 x64
            - name: Build something requiring CL.EXE
              uses: ilammy/msvc-dev-cmd@v1
              with:
                arch: x64

            # Step 3: 创建构建目录并运行 CMake（指定 x64 平台）
            - name: Configure CMake for x64
              run: |
                cmake -G "NMake Makefiles" -DCMAKE_BUILD_TYPE=Release .
                nmake

    build-android-gradle:
        name: Android (Arm64-v8a)
        runs-on: ubuntu-latest
        timeout-minutes: 15
        env:
            BUILD_TYPE: Release
        steps:
            - uses: actions/checkout@v4
         
            - name: set up JDK 11
              uses: actions/setup-java@v3
              with:
                java-version: '11'
                distribution: 'temurin'
                cache: gradle

            - name: Grant execute permission for gradlew
              working-directory: src/android/java
              run: chmod +x gradlew
            - name: Build with Gradle
              working-directory: src/android/java
              run: ./gradlew assemble

