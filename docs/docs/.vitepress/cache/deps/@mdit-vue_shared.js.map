{
  "version": 3,
  "sources": ["../../../../node_modules/@mdit-vue/shared/dist/index.mjs"],
  "sourcesContent": ["const htmlEscapeMap = {\n  \"&\": \"&amp;\",\n  \"<\": \"&lt;\",\n  \">\": \"&gt;\",\n  \"'\": \"&#39;\",\n  '\"': \"&quot;\"\n};\nconst htmlEscapeRegexp = /[&<>'\"]/g;\nconst htmlEscape = (str) => str.replace(\n  htmlEscapeRegexp,\n  (char) => htmlEscapeMap[char]\n);\n\nconst htmlUnescapeMap = {\n  \"&amp;\": \"&\",\n  \"&#38;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&#60;\": \"<\",\n  \"&gt;\": \">\",\n  \"&#62;\": \">\",\n  \"&apos;\": \"'\",\n  \"&#39;\": \"'\",\n  \"&quot;\": '\"',\n  \"&#34;\": '\"'\n};\nconst htmlUnescapeRegexp = /&(amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g;\nconst htmlUnescape = (str) => str.replace(\n  htmlUnescapeRegexp,\n  (char) => htmlUnescapeMap[char]\n);\n\nconst resolveTitleFromToken = (token, { shouldAllowHtml, shouldEscapeText }) => {\n  const children = token.children ?? [];\n  const titleTokenTypes = [\"text\", \"emoji\", \"code_inline\"];\n  if (shouldAllowHtml) {\n    titleTokenTypes.push(\"html_inline\");\n  }\n  const titleTokens = children.filter(\n    (item) => titleTokenTypes.includes(item.type) && // filter permalink symbol that generated by markdown-it-anchor\n    !item.meta?.isPermalinkSymbol\n  );\n  return titleTokens.reduce((result, item) => {\n    if (shouldEscapeText) {\n      if (item.type === \"code_inline\" || item.type === \"text\") {\n        return `${result}${htmlEscape(item.content)}`;\n      }\n    }\n    return `${result}${item.content}`;\n  }, \"\").trim();\n};\n\nconst resolveHeadersFromTokens = (tokens, {\n  level,\n  shouldAllowHtml,\n  shouldAllowNested,\n  shouldEscapeText,\n  slugify,\n  format\n}) => {\n  const headers = [];\n  const stack = [];\n  const push = (header) => {\n    while (stack.length !== 0 && header.level <= stack[0].level) {\n      stack.shift();\n    }\n    if (stack.length === 0) {\n      headers.push(header);\n      stack.push(header);\n    } else {\n      stack[0].children.push(header);\n      stack.unshift(header);\n    }\n  };\n  for (let i = 0; i < tokens.length; i += 1) {\n    const token = tokens[i];\n    if (token?.type !== \"heading_open\") {\n      continue;\n    }\n    if (token?.level !== 0 && !shouldAllowNested) {\n      continue;\n    }\n    const headerLevel = Number.parseInt(token.tag.slice(1), 10);\n    if (!level.includes(headerLevel)) {\n      continue;\n    }\n    const nextToken = tokens[i + 1];\n    if (!nextToken) {\n      continue;\n    }\n    const title = resolveTitleFromToken(nextToken, {\n      shouldAllowHtml,\n      shouldEscapeText\n    });\n    const slug = token.attrGet(\"id\") ?? slugify(title);\n    push({\n      level: headerLevel,\n      title: format?.(title) ?? title,\n      slug,\n      link: `#${slug}`,\n      children: []\n    });\n  }\n  return headers;\n};\n\nconst rControl = /[\\u0000-\\u001f]/g;\nconst rSpecial = /[\\s~`!@#$%^&*()\\-_+=[\\]{}|\\\\;:\"'“”‘’<>,.?/]+/g;\nconst rCombining = /[\\u0300-\\u036F]/g;\nconst slugify = (str) => str.normalize(\"NFKD\").replace(rCombining, \"\").replace(rControl, \"\").replace(rSpecial, \"-\").replace(/-{2,}/g, \"-\").replace(/^-+|-+$/g, \"\").replace(/^(\\d)/, \"_$1\").toLowerCase();\n\nexport { htmlEscape, htmlUnescape, resolveHeadersFromTokens, resolveTitleFromToken, slugify };\n"],
  "mappings": "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",
  "names": ["slugify"]
}
